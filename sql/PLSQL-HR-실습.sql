-- PLSQL-HR-실습.sql

-- 1) 주민등록번호로 남성/여성 구분하여 출력 (IF 버젼)
DECLARE
	V_SNO CHAR(14) := '990101-2222222';
	V_GENDER CHAR(1);
BEGIN
	V_GENDER := SUBSTR(V_SNO, INSTR(V_SNO, '-') + 1, 1);
	IF V_GENDER = '1' 
		OR V_GENDER = '3'
	THEN DBMS_OUTPUT.PUT_LINE('남성'); 
   	ELSIF V_GENDER = '2' 
		OR V_GENDER = '4'
	THEN DBMS_OUTPUT.PUT_LINE('여성');
	END IF;
END;

-- 2) 주민등록번호로 남성/여성 구분하여 출력 (CASE 버젼)
DECLARE
   	V_SNO CHAR(14) := '990101-2222222';
	V_GENDER CHAR(1);
BEGIN
	V_GENDER:=SUBSTR(V_SNO, INSTR(V_SNO, '-') + 1, 1);
	CASE V_GENDER
		WHEN '1' THEN DBMS_OUTPUT.PUT_LINE('남성'); 
		WHEN '3' THEN DBMS_OUTPUT.PUT_LINE('남성'); 
		WHEN '2' THEN DBMS_OUTPUT.PUT_LINE('여성');
		WHEN '4' THEN DBMS_OUTPUT.PUT_LINE('여성');
	END CASE;
END;

-- 3) 구구단 출력하기
BEGIN
	FOR I IN 2..9
	LOOP
		FOR J IN 1..9
		LOOP
			DBMS_OUTPUT.PUT_LINE(I||'*'||J||'= '||I * J);
		END LOOP;
	END LOOP;
END;

-- 4) 별 출력하기 1
--*
--**
--***
--****
--*****
BEGIN
	FOR I IN 1..5
	LOOP
		FOR J IN 1..I
		LOOP
			DBMS_OUTPUT.PUT('*');
		END LOOP;
			DBMS_OUTPUT.PUT_LINE(' ');
	END LOOP;
END;



-- 5) 별 출력하기 2
-- *****
-- o****
-- oo***
-- ooo**
-- oooo*
BEGIN
	FOR I IN 1..5 LOOP
		FOR J IN 2..I LOOP
			DBMS_OUTPUT.PUT('o');
		END LOOP;
		FOR J IN I..5 LOOP
			DBMS_OUTPUT.PUT('*');
		END LOOP;
			DBMS_OUTPUT.PUT_LINE(' ');
	END LOOP;
END;

-- 6) 별 출력하기 3
-- oooo*
-- ooo***
-- oo*****
-- o******* 
-- *********
BEGIN
	FOR I IN 1..5 LOOP
		FOR J IN I..4 LOOP
			DBMS_OUTPUT.PUT('o');
		END LOOP;
		FOR J IN 1..(I*2-1) LOOP
			DBMS_OUTPUT.PUT('*');
		END LOOP;
			DBMS_OUTPUT.PUT_LINE(' ');
	END LOOP;
END;
	

-- 7) EMPLOYEE_ID가 100인 사원의 이름과 급여를 변수에 저장한 후 출력
-- 1
DECLARE
	V_FULLNAME NVARCHAR2(46);
	V_SAL EMPLOYEES.SALARY%TYPE;
BEGIN 
	SELECT FIRST_NAME||' '||LAST_NAME, SALARY INTO V_FULLNAME, V_SAL
	FROM EMPLOYEES
	WHERE EMPLOYEE_ID=100;
	DBMS_OUTPUT.PUT_LINE(V_FULLNAME||' '||V_SAL);
END;

-- 2
DECLARE
	V_EMP_ROW EMPLOYEES%ROWTYPE;
	V_FULLNAME NVARCHAR2(46);
	V_SAL EMPLOYEES.SALARY%TYPE;
BEGIN 
	SELECT * INTO V_EMP_ROW
	FROM EMPLOYEES
	WHERE EMPLOYEE_ID=100;
	V_FULLNAME := V_EMP_ROW.FIRST_NAME||' '||V_EMP_ROW.LAST_NAME;
	V_SAL := V_EMP_ROW.SALARY;
	DBMS_OUTPUT.PUT_LINE(V_FULLNAME||' '||V_SAL);
END;

-- 8) EMPLOYEE_ID가 101인 사원의 급여가 10000 이상이면 '고소득자',
--     아니면 '일반소득자'라고 출력
DECLARE
	V_RT EMPLOYEES%ROWTYPE;
BEGIN
	SELECT * INTO V_RT
	FROM EMPLOYEES
	WHERE EMPLOYEE_ID=101;
	IF V_RT.SALARY >= 10000 THEN DBMS_OUTPUT.PUT_LINE('고소득자');
	ELSE DBMS_OUTPUT.PUT_LINE('일반소득자');
	END IF;
END;

-- 9) EMPLOYEE_ID가 100~104인 사원의 이름을 반복문으로 출력
DECLARE
	V_RT EMPLOYEES%ROWTYPE;
	V_EI EMPLOYEES.EMPLOYEE_ID%TYPE:= 99;
BEGIN
	WHILE V_EI<104
	LOOP
		V_EI := V_EI + 1;
		DBMS_OUTPUT.PUT_LINE(V_EI);
		SELECT * INTO V_RT
		FROM EMPLOYEES
		WHERE EMPLOYEE_ID=V_EI;		
		DBMS_OUTPUT.PUT_LINE(V_RT.FIRST_NAME||' '||V_RT.LAST_NAME);
	END LOOP;
END;

DECLARE
	V_FNAME EMPLOYEES.FIRST_NAME%TYPE;
BEGIN
	FOR I IN 100..104 LOOP
		SELECT * INTO V_RT
		FROM EMPLOYEES
		WHERE EMPLOYEE_ID=I;		
		DBMS_OUTPUT.PUT_LINE(V_FNAME);
	END LOOP;
END;

-- 10) EMPLOYEE_ID가 999인 사원의 급여를 조회하고, 
--       사원이 존재하지 않으면 '사원이 존재하지 않습니다'를 출력
DECLARE
	V_PT EMPLOYEES%ROWTYPE;
BEGIN
	SELECT * INTO V_PT
	FROM EMPLOYEES
	WHERE EMPLOYEE_ID=999;
	IF V_PT.EMPLOYEE_ID=999 THEN DBMS_OUTPUT.PUT_LINE(V_PT.SALARY);	
	ELSE DBMS_OUTPUT.PUT_LINE('사원이 존재하지 않습니다');
	END IF;
	EXCEPTION
	WHEN NO_DATA_FOUND THEN
	DBMS_OUTPUT.PUT_LINE('사원이 존재하지 않습니다');
END;

-- 출력 유틸리티 프로시져
CREATE OR REPLACE PROCEDURE P(P_STR IN NVARCHAR2)
IS
BEGIN
	DBMS_OUTPUT.PUT(P_STR);
END;

CREATE OR REPLACE PROCEDURE PL(P_STR IN NVARCHAR2)
IS
BEGIN
	DBMS_OUTPUT.PUT_LINE(P_STR);
END;

BEGIN
	PL('HELLO');
END;





