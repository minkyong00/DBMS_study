-- 조인-HR.sql

-- 1) INNER JOIN (= EQUI JOIN)
-- 조인하려는 테이블 양쪽에 컬럼의 값이 같다는 조인 조건을 두고 조인
-- 예) A테이블의 a컬럼의 값과 B테이블의 b컬럼의 값이 같은 행들을 조회


-- CARTESIAN JOIN
-- 양쪽 테이블의 모든 행의 조합을 조회
-- 예) A테이블의 행이 50개, B테이블의 행이 30개 => 50 * 30 = 1500
SELECT *
FROM EMPLOYEES E, DEPARTMENTS D; -- 조인할 테이블들을 ,로 나열

SELECT COUNT(*)
FROM EMPLOYEES E, DEPARTMENTS D; -- 2889 행, 각 테이블의 행의 수 곱

-- EMPLOYEES테이블과 DEPARTMENTS 테이블 INNER JOIN
SELECT *
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID; -- INNER 조인 조건

SELECT COUNT(*) FROM EMPLOYEES; -- 107
SELECT COUNT(*) FROM DEPARTMENTS; -- 27

-- EMPLOYEES테이블과 DEPARTMENTS 테이블 INNER JOIN한 결과의 행의 수
-- EMPLOYEES테이블에 DEPARTMENT_ID가 NULL인 행이 하나 있으므로 106개 조회됨

-- ORACLE 문법
SELECT COUNT(*)
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID; -- 106 행 

-- ANSI 문법
SELECT COUNT(*)
FROM EMPLOYEES E JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID; -- 106 행 

-- 50번 부서에 한정해서 두 테이블을 INNER JOIN
SELECT *
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
	AND E.DEPARTMENT_ID = 50; -- 조인 조건 외의 추가 조건은 AND로 추가
	
-- 실습 1) COUNTRIES와 LOCATIONS INNER JOIN
SELECT *
FROM COUNTRIES C, LOCATIONS L
WHERE C.COUNTRY_ID = L.COUNTRY_ID;

-- 실습 2) 실습1에서 국가명이 Italy인 결과 조회
SELECT *
FROM COUNTRIES C, LOCATIONS L
WHERE C.COUNTRY_ID = L.COUNTRY_ID
	AND C.COUNTRY_NAME = 'Italy';

-- 실습 3) EMPLOYEES, JOB_HISTORY, JOBS INNER JOIN
SELECT *
FROM EMPLOYEES E, JOB_HISTORY JH, JOBS J
WHERE E.JOB_ID = JH.JOB_ID 
	AND JH.JOB_ID = J.JOB_ID;

-- LEFT OUTER JOIN
-- 기준이 왼쪽 테이블이 되는 조인
-- 오른쪽 테이블에 조인 컬럼의 값이 없더라도 왼쪽 테이블의 데이터는 모두 조회

-- ORACLE 문법
SELECT *
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID(+); -- 오른쪽 행의 수를 증가시킨다는 의미

SELECT COUNT(*)
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID(+); -- 107 행 (106 + 1)

SELECT E.DEPARTMENT_ID, D.DEPARTMENT_ID
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID(+); -- NULL인 행 1개

-- ANSI 문법
SELECT *
FROM EMPLOYEES E LEFT OUTER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

-- RIGHT OUTER JOIN
-- 기준이 오른쪽 테이블이 되는 조인
-- 왼쪽 테이블에 조인 컬럼의 값이 없더라도 오른쪽 테이블의 데이터는 모두 조회

-- ORACLE 문법
SELECT *
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID(+) = D.DEPARTMENT_ID; -- 오른쪽 행의 수를 증가시킨다는 의미

SELECT COUNT(*)
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID(+) = D.DEPARTMENT_ID; -- 122 행 (106 + 16)

SELECT E.DEPARTMENT_ID, D.DEPARTMENT_ID
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID(+) = D.DEPARTMENT_ID; -- NULL인 행 16개

-- ANSI 문법
SELECT *
FROM EMPLOYEES E RIGHT OUTER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID; -- 오른쪽 행의 수를 증가시킨다는 의미

-- FULL OUTER JOIN
-- 오라클은 FULL OUTER JOIN을 지원하지 않음

-- ANSI 문법
SELECT *
FROM EMPLOYEES E FULL OUTER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID; -- 왼쪽과 오른쪽 행의 수를 증가시킨다는 의미

SELECT COUNT(*)
FROM EMPLOYEES E FULL OUTER JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID; -- 123 행 (106 + 1 + 16)


-- SELF JOIN
-- 물리적으로는 하나의 테이블인데 논리적으로 두개로 두고 조인
SELECT *
FROM EMPLOYEES E1, EMPLOYEES E2
WHERE E1.MANAGER_ID = E2.EMPLOYEE_ID;

-- 실습) MANAGER_ID가 100번인 직원들의 정보를 SELF JOIN을 이용해서 조회
SELECT *
FROM EMPLOYEES E1, EMPLOYEES E2
WHERE E1.MANAGER_ID = E2.EMPLOYEE_ID
	AND E1.MANAGER_ID = 100;













