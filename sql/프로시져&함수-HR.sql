-- 프로시져&함수-HR.sql

/*
프로시져(PROCEDURE)
- 호출해서 데이터베이스 작업을 하기 위한 코드 블럭
- 반환타입이나 반환값이 없음
- 파라미터
- 1) IN: 프로시져 실행을 위해 필요한 값을 저장하는 변수
- 2) OUT: 프로시져를 실행하고 값을 저장해서 호출한 쪽에 보내기 위한 변수
- 3) IN OUT: IN 파라미터와 OUT 파라미터 두가지 기능을 모두 수행
- 이름이 있는 NAMED PROCEDURE와 이름이 없는 ANONYMOUNS PROCEDURE가 있음
- 프로시져 호출할 때는 CALL 프로시져명(인자리스트);
*/


-- 익명 프로시져
DECLARE
	V_NUM NUMBER;
BEGIN
	V_NUM := 100;
	PL(V_NUM);
END;

-- 기명 프로시져
CREATE OR REPLACE PROCEDURE PROC_TEST(P_IN IN NUMBER)
IS
BEGIN
	PL('IN 파라미터 P_IN 변수의 값: '||P_IN);
END;

-- 익명
BEGIN
	PROC_TEST(50);
END;

CALL PROC_TEST(50);

-- IN, OUT, IN OUT 파라미터를 사용하는 프로시져
CREATE OR REPLACE PROCEDURE PROC_TEST2(
	P_IN IN NUMBER, -- 10
	P_OUT OUT NUMBER, -- 20(의미없음)
	P_INOUT IN OUT NUMBER -- 30
)
IS
BEGIN
	PL('P_IN 변수가 전달받은 값: '||P_IN); -- 10
	PL('P_INOUT 변수가 전달받은 값: '||P_INOUT); -- 30
	P_OUT := 40;
	P_INOUT := 50;
END;


DECLARE
	V1 NUMBER := 20;
	V2 NUMBER := 30;
BEGIN
	PL('프로시져 호출 전 V1 변수의 값: '||V1); -- 20
	PROC_TEST2(10, V1, V2); -- 10 20 30
	PL('프로시져 P_OUT 변수가 보낸 값: '||V1); -- 40
	PL('프로시져 P_INOUT 변수가 보낸 값: '||V2); -- 50
END;

-- 실습) PROC_TEST3 프로시져에 IN파라미터 2개, OUT파라미터 1개를
--      선언하고 2개의 정수를 입력하면 덧셈 결과를 OUT파라미터를 통해 출력
DROP PROCEDURE PROC_TEST3;

CREATE OR REPLACE PROCEDURE PROC_TEST3(
	P_IN IN NUMBER,
	P_IN2 IN NUMBER,
	P_SUM OUT NUMBER
)
IS
BEGIN
	P_SUM := P_IN + P_IN2;
END;


DECLARE
	V_SUM NUMBER;
BEGIN
	PROC_TEST3(1, 2, V_SUM);
	PL(V_SUM);
END;


-- 함수 (FUNCTION)
-- 반환타입과 반환값이 있음
-- IN파라미터만 있음

CREATE OR REPLACE FUNCTION FUNC_GETDEPTID(
	P_EMP_ID EMPLOYEES.EMPLOYEE_ID%TYPE
) RETURN NUMBER
IS
	V_DEPT_ID EMPLOYEES.EMPLOYEE_ID%TYPE;
BEGIN
	SELECT DEPARTMENT_ID
	INTO V_DEPT_ID
	FROM EMPLOYEES
	WHERE EMPLOYEE_ID = P_EMP_ID;
	RETURN V_DEPT_ID;
END;

SELECT FUNC_GETDEPTID(100) FROM DUAL;


-- 실습) 부서아이디를 입력하면 해당 부서의 직원 수를 반환하는 FUNC_EMP_CNT
--      함수를 생성하고 출력

CREATE OR REPLACE FUNCTION FUNC_EMP_CNT(
	P_DEPT_ID IN EMPLOYEES.DEPARTMENT_ID%TYPE
) RETURN NUMBER
IS
	V_EMP_CNT NUMBER;
BEGIN
	SELECT COUNT(*)
	INTO V_EMP_CNT
	FROM EMPLOYEES
	WHERE DEPARTMENT_ID = P_DEPT_ID;
	RETURN V_EMP_CNT;
END;

SELECT FUNC_EMP_CNT(90) FROM DUAL;

-- 실습 : 직원아이디를 입력하면 직원의 풀네임을 반환하는 FUNC_EMP_FULLNAME
--       함수를 생성하고 직원아이디와 풀네임을 출력

CREATE OR REPLACE FUNCTION FUNC_EMP_FULLNAME(
	P_EMP_ID EMPLOYEES.EMPLOYEE_ID%TYPE
) RETURN VARCHAR2
IS
	V_FULLNAME VARCHAR2(46);
BEGIN
	SELECT FIRST_NAME||' '||LAST_NAME
	INTO V_FULLNAME
	FROM EMPLOYEES
	WHERE EMPLOYEE_ID = P_EMP_ID;
	RETURN V_FULLNAME;
END;

SELECT 100, FUNC_EMP_FULLNAME(100) FROM DUAL;

-- 2) OBJECT 사용 (외부에서 사용)
-- RECORD 타입은 프로시져나 함수 내부에서 행의 전체나 일부 컬럼에 대응하기 위한 타입
-- OBJECT 타입은 프로지져나 함수 외부에서 서로 다른 타입 여러개를 묶기 위한 타입

CREATE OR REPLACE TYPE EMP_OBJ AS OBJECT(
	EMP_ID NUMBER,
	FULLNAME VARCHAR2(100)
);

CREATE OR REPLACE FUNCTION FUNC_EMP_FULLNAME2( 
	P_EMP_ID EMPLOYEES.EMPLOYEE_ID%TYPE
) RETURN EMP_OBJ
IS
	V_EMP_ID EMPLOYEES.EMPLOYEE_ID%TYPE;
	V_FULLNAME VARCHAR2(46);
BEGIN
	SELECT EMPLOYEE_ID, FIRST_NAME||' '||LAST_NAME
	INTO V_EMP_ID, V_FULLNAME
	FROM EMPLOYEES
	WHERE EMPLOYEE_ID = P_EMP_ID;
	RETURN EMP_OBJ(V_EMP_ID, V_FULLNAME);
END;

SELECT FUNC_EMP_FULLNAME2(100) FROM DUAL;


















